ARG NODE_ENV=production
ARG TZ='Europe/Warsaw'
ARG PORT=3000

FROM node:17-alpine AS deps
ARG NODE_ENV
ENV NODE_ENV=$NODE_ENV
ARG NODE_ENV
ENV TZ=$TZ

RUN apk add --no-cache libc6-compat
# why libc6-compat might be needed:
# https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine
WORKDIR /app
COPY package.json ./

RUN npm install --production

FROM node:17-alpine AS builder
WORKDIR /app
ARG NODE_ENV
ENV NODE_ENV=$NODE_ENV
ARG TZ
ENV TZ=$TZ
ARG BACKEND_URL=
ENV BACKEND_URL=$BACKEND_URL
ARG SERVICE_USER_TOKEN=
ENV SERVICE_USER_TOKEN=$SERVICE_USER_TOKEN
ARG NEXT_PUBLIC_URL=
ENV NEXT_PUBLIC_URL=$NEXT_PUBLIC_URL
ARG RECAPTCHA_SECRET=placeholder
ENV RECAPTCHA_SECRET=$RECAPTCHA_SECRET
ARG RECAPTCHA_SITE=placeholder
ENV RECAPTCHA_SITE=$RECAPTCHA_SITE

COPY . .
COPY --from=deps /app/node_modules ./node_modules
RUN npm run build

FROM node:17-alpine
WORKDIR /app
ARG PORT
ENV PORT=$PORT
ARG TZ
ENV TZ=$TZ
ARG BACKEND_URL=
ENV BACKEND_URL=$BACKEND_URL
ARG SERVICE_USER_TOKEN=
ENV SERVICE_USER_TOKEN=$SERVICE_USER_TOKEN
ARG NEXT_PUBLIC_URL=
ENV NEXT_PUBLIC_URL=$NEXT_PUBLIC_URL
ARG RECAPTCHA_SECRET=placeholder
ENV RECAPTCHA_SECRET=$RECAPTCHA_SECRET
ARG RECAPTCHA_SITE=placeholder
ENV RECAPTCHA_SITE=$RECAPTCHA_SITE
# Disable NextJS telemetry:
# ENV NEXT_TELEMETRY_DISABLED 1
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

COPY --from=builder /app/next.config.js ./
COPY --from=builder /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next* ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json

USER nextjs

ENTRYPOINT ["node_modules/.bin/next"]
CMD ["start"]
